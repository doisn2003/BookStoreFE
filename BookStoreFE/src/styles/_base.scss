@use 'sass:map';
@use 'variables' as vars;
@use 'mixins' as mix;

// reset
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// base html elements
html {
  font-size: 16px;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  font-family: map.get(vars.$font-family, 'primary');
  font-size: map.get(vars.$font-sizes, 'base');
  line-height: 1.5;
  color: mix.get-color('gray', '900');
  background-color: mix.get-color('gray', '100');
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// typo
h1, h2, h3, h4, h5, h6 {
  margin-bottom: map.get(vars.$spacing, '4');
  font-weight: map.get(vars.$font-weights, 'bold');
  line-height: 1.2;
}

h1 { @include mix.font-size('5xl'); }
h2 { @include mix.font-size('4xl'); }
h3 { @include mix.font-size('3xl'); }
h4 { @include mix.font-size('2xl'); }
h5 { @include mix.font-size('xl'); }
h6 { @include mix.font-size('lg'); }

p {
  margin-bottom: map.get(vars.$spacing, '4');
}

// links
a {
  color: mix.get-color('primary');
  text-decoration: none;
  @include mix.transition;

  @include mix.hover {
    color: mix.get-color('primary', 'dark');
  }
}

// lists
ul, ol {
  margin-bottom: map.get(vars.$spacing, '4');
  padding-left: map.get(vars.$spacing, '8');
}

// images
img {
  max-width: 100%;
  height: auto;
}

// forms
input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

// buttons
button {
  cursor: pointer;
  font-family: inherit;
  border: none;
  background: none;

  &:disabled {
    cursor: not-allowed;
    opacity: 0.65;
  }
}

// utility
.container {
  @include mix.container;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// accessibility
.skip-link {
  position: absolute;
  top: -40px;
  left: 0;
  background: mix.get-color('primary');
  color: white;
  padding: map.get(vars.$spacing, '2') map.get(vars.$spacing, '4');
  z-index: map.get(vars.$z-index, 'modal');

  &:focus {
    top: 0;
  }
} 